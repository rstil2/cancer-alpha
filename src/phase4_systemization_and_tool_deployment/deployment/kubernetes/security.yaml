apiVersion: v1
kind: ServiceAccount
metadata:
  name: cancer-alpha-api
  namespace: cancer-alpha
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cancer-alpha-web
  namespace: cancer-alpha
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cancer-alpha-role
  namespace: cancer-alpha
rules:
- apiGroups: [""]
  resources: ["pods", "services", "configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cancer-alpha-rolebinding
  namespace: cancer-alpha
subjects:
- kind: ServiceAccount
  name: cancer-alpha-api
  namespace: cancer-alpha
- kind: ServiceAccount
  name: cancer-alpha-web
  namespace: cancer-alpha
roleRef:
  kind: Role
  name: cancer-alpha-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cancer-alpha-network-policy
  namespace: cancer-alpha
spec:
  podSelector:
    matchLabels:
      app: cancer-alpha-api
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: cancer-alpha-web
    - namespaceSelector:
        matchLabels:
          name: cancer-alpha
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cancer-alpha-api-pdb
  namespace: cancer-alpha
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: cancer-alpha-api
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: cancer-alpha-web-pdb
  namespace: cancer-alpha
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: cancer-alpha-web
---
apiVersion: v1
kind: Secret
metadata:
  name: cancer-alpha-tls
  namespace: cancer-alpha
type: kubernetes.io/tls
data:
  tls.crt: # Base64 encoded certificate
  tls.key: # Base64 encoded private key
