version: '3.8'

services:
  # Cancer Alpha API Service
  cancer-alpha-api:
    build:
      context: ../../../
      dockerfile: src/phase4_systemization_and_tool_deployment/deployment/docker/Dockerfile.api
    container_name: cancer-alpha-api
    ports:
      - "8000:8000"
    environment:
      - PYTHONUNBUFFERED=1
      - ENVIRONMENT=production
      - LOG_LEVEL=info
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - api_logs:/app/logs
      - model_cache:/app/model_cache
    networks:
      - cancer-alpha-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'

  # Cancer Alpha Web Application
  cancer-alpha-web:
    build:
      context: ../../../
      dockerfile: src/phase4_systemization_and_tool_deployment/deployment/docker/Dockerfile.web
    container_name: cancer-alpha-web
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=production
    volumes:
      - web_logs:/var/log/nginx
    networks:
      - cancer-alpha-network
    depends_on:
      - cancer-alpha-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: cancer-alpha-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cancer-alpha-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  # Prometheus monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: cancer-alpha-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - cancer-alpha-network
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Grafana for monitoring dashboards (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: cancer-alpha-grafana
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - cancer-alpha-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    depends_on:
      - prometheus
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

networks:
  cancer-alpha-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  api_logs:
    driver: local
  web_logs:
    driver: local
  model_cache:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
